{"version":3,"sources":["components/error/index.js","components/error/error.js","components/Authorization/authorization.js","components/Authorization/index.js","components/services/UserService/index.js","components/services/UserService/UserService.js","components/ChatProvider/chatProviderRecipients.js","components/ChatProvider/ChatProvider.js","components/add-remove-modal-form/index.js","components/add-remove-modal-form/addRemoveModalForm.js","components/Chat/Dialogs/Dialog/index.js","components/Chat/Dialogs/Dialog/dialog.js","components/spinner/index.js","components/spinner/spinner.js","components/Chat/Dialogs/index.js","components/Chat/Dialogs/dialogs.js","components/Chat/MessageHistory/Message/index.js","components/Chat/MessageHistory/Message/message.js","components/Chat/MessageHistory/index.js","components/Chat/MessageHistory/messageHistory.js","components/Chat/InputMessage/index.js","components/Chat/InputMessage/inputMessage.js","components/Chat/ModalWindow/index.js","components/Chat/ModalWindow/modalWindow.js","components/Chat/index.js","components/Chat/chat.js","components/RegistrationForm/index.js","components/RegistrationForm/registration.js","App.js","index.js"],"names":["Error","errorMessage","className","Authorization","userService","useState","username","setUsername","password","setPassword","error","setError","onSubmit","event","preventDefault","authentication","then","window","location","reload","catch","e","message","htmlFor","type","name","required","autoFocus","value","onChange","target","id","length","to","UserService","_apiBase","isAuthorized","axios","post","withCredentials","response","console","log","localStorage","setItem","data","jwtToken","user","firstName","lastName","JSON","stringify","registration","userExists","timeRefreshToken","tokenRefreshResponse","err","status","setTimeout","SELECT_RECIPIENTS","RecipientsContext","React","createContext","useRecipients","useContext","reducer","state","action","recipients","RecipientsProvider","children","useReducer","dispatch","Provider","selectRecipients","SELECT_DIALOGUE","ChatContext","useChat","dialogId","ChatProvider","selectDialog","AddRemoveModalForm","connection","handleClose","handleShow","show","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","variant","onClick","replace","a","connectionStarted","indexOf","invoke","Dialog","active","classList","setType","setShow","src","alt","Spinner","Dialogs","showDialogue","dialogs","setDialogs","useEffect","parse","getItem","map","item","split","messages","text","undefined","Message","userName","senderName","MessageHistory","setUserName","setMessages","forEach","dialogMessages","senderUsername","i","InputMessage","setText","sendMessage","placeholder","aria-hidden","ModelWindow","setMessage","recipient","setRecipient","rows","Chat","setConnection","token","setToken","setData","newConnection","HubConnectionBuilder","withUrl","accessTokenFactory","build","start","result","on","handleChecking","send","removeItem","Registration","copyPassword","setCopyPassword","App","path","exact","strict","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0e7ec08.chunk.js","sourcesContent":["import Error from './error';\n\nexport default Error;","import React from 'react';\n\nconst Error = ({errorMessage}) => {\n    return (<div className=\"alert alert-danger\">\n        <strong>{errorMessage}</strong>\n    </div>)\n}\n\nexport default Error;","import React, {Component, useState, useEffect} from 'react'\nimport {Link} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css'\nimport Error from \"../error\";\n\n\nfunction Authorization({userService}) {\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [error, setError] = useState('')\n\n    const onUsernameChanged = (event) => {\n        setUsername(event.target.value)\n    }\n\n    const onPasswordChanged = (event) => {\n        setPassword(event.target.value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        userService.authentication(username, password)\n            .then(() => {\n                window.location.reload()\n            })\n            .catch((e) => {\n                if (e.message = \"Request failed with status code 400\") {\n                    setError(\"Неправильный логин или пароль\")\n                }\n            })\n    }\n\n    return (\n        <>\n            <main className=\"login-form\">\n                <div className=\"container\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-md-8\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">Login</div>\n                                <div className=\"card-body\">\n                                    <form onSubmit={handleSubmit}>\n                                        <div className=\"form-group row\">\n                                            <label htmlFor=\"email_address\"\n                                                   className=\"col-md-4 col-form-label text-md-right\">Username</label>\n                                            <div className=\"col-md-6\">\n                                                <input type=\"text\" className=\"form-control\"\n                                                       name=\"email-address\" required autoFocus\n                                                       value={username}\n                                                       onChange={onUsernameChanged}\n                                                />\n                                            </div>\n                                        </div>\n                                        <div className=\"form-group row\">\n                                            <label htmlFor=\"password\"\n                                                   className=\"col-md-4 col-form-label text-md-right\">Password</label>\n                                            <div className=\"col-md-6\">\n                                                <input type=\"password\" id=\"password\" className=\"form-control\"\n                                                       name=\"password\" required\n                                                       value={password}\n                                                       onChange={onPasswordChanged}\n                                                />\n                                            </div>\n                                        </div>\n                                        {error.length > 0 ? <Error errorMessage={error}/> : <div></div>}\n                                        <div className=\"col-md-6 offset-md-4\">\n                                            <button type=\"submit\" className=\"btn btn-primary\">\n                                                Log in\n                                            </button>\n                                            <Link to={'/registration'} className=\"btn btn-link\">\n                                                Registration\n                                            </Link>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </main>\n        </>\n    )\n}\n\nexport default Authorization;","import Authorization from \"./authorization\";\nexport default Authorization","import UserService from \"./UserService\";\nexport default UserService","import axios from 'axios'\n\nexport default class UserService {\n\n    _apiBase = ''\n\n    isAuthorized = false;\n\n    constructor() {\n\n        const delay = 3600000;\n        const timeRefreshToken = () => {\n            console.log('user service: token updated')\n            axios.post(this._apiBase + '/users/refresh-token', {}, {\n                withCredentials: true\n            }).then(tokenRefreshResponse => {\n                localStorage.setItem('jwtToken', tokenRefreshResponse.data.jwtToken)\n                this.isAuthorized = true;\n            }).catch(err => {\n                console.log('user service: ', err.message)\n                if (err.status == 401) {\n                    this.isAuthorized = false\n                }\n            })\n            setTimeout(function () {\n                timeRefreshToken()\n            }, delay)\n        }\n\n        timeRefreshToken()\n\n    }\n\n    authentication = (username, password) => {\n        return axios.post(this._apiBase + '/users/authenticate', {\n                username,\n                password\n            },\n            {\n                withCredentials: true\n            }).then(response => {\n            console.log('user service: authentication ', response)\n            localStorage.setItem('jwtToken', response.data.jwtToken)\n            const user = {\n                firstName: response.data.firstName,\n                lastName: response.data.lastName,\n                username: response.data.username\n            }\n            localStorage.setItem('username', JSON.stringify(user))\n        })\n    }\n\n    registration = (username, password) => {\n        return axios.post(this._apiBase + '/users/registration', {\n            username,\n            password\n        }, {\n            withCredentials: true\n        }).then(response => {\n            console.log('user service: registration ', response)\n        })\n    }\n\n    userExists = (username) => {\n        return axios.post(this._apiBase + '/users/get', {\n            username\n        }, {\n            withCredentials: true\n        })\n    }\n}","import React, {useReducer, useContext} from 'react'\n\nconst SELECT_RECIPIENTS = 'select_recipients'\n\nconst RecipientsContext = React.createContext()\n\nexport const useRecipients = () => {\n    return useContext(RecipientsContext)\n}\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case SELECT_RECIPIENTS:\n            return {\n                ...state,\n                recipients: action.recipients\n            }\n        default:\n            return state\n    }\n}\n\nexport default function RecipientsProvider({children}) {\n    const [state, dispatch] = useReducer(reducer, {\n        recipients: null,\n    })\n\n    return (<RecipientsContext.Provider value={{\n        recipients: state.recipients,\n        selectRecipients: (recipients) => dispatch({\n            type: SELECT_RECIPIENTS,\n            recipients\n        })\n    }}>\n        {children}\n    </RecipientsContext.Provider>)\n\n\n\n}","import React, {useReducer, useContext} from 'react'\nimport RecipientsProvider from \"./chatProviderRecipients\";\n\n\nconst SELECT_DIALOGUE = 'select_dialogue'\nconst SELECT_RECIPIENTS = 'select_recipients'\n\nconst ChatContext = React.createContext()\n\nexport const useChat = () => {\n    return useContext(ChatContext)\n}\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case SELECT_DIALOGUE:\n            return {\n                ...state,\n                dialogId: action.dialogId - 1\n            }\n        default:\n            return state\n    }\n}\n\nexport default function ChatProvider({children}) {\n    const [state, dispatch] = useReducer(reducer, {\n        dialogId: -1,\n    })\n\n    return (\n        <RecipientsProvider>\n            <ChatContext.Provider value={{\n                dialogId: state.dialogId,\n                selectDialog: (dialogId) => dispatch({\n                    type: SELECT_DIALOGUE,\n                    dialogId\n                })\n            }}>\n                {children}\n            </ChatContext.Provider>\n        </RecipientsProvider>\n    )\n}","import AddRemoveModalForm from \"./addRemoveModalForm\";\nexport default AddRemoveModalForm","import React, {useEffect, useState} from 'react'\nimport {Modal, Button} from \"react-bootstrap\";\nimport Error from \"../error\";\nimport {useChat} from \"../ChatProvider/ChatProvider\";\nimport {useRecipients} from \"../ChatProvider/chatProviderRecipients\";\n\nexport default function AddRemoveModalForm({connection, type, handleShow, handleClose, show, userService}) {\n\n    const [username, setUsername] = useState('')\n    const [error, setError] = useState('')\n\n    const handleUsernameUpdate = (e) => {\n        setUsername(e.target.value)\n    }\n\n    const {dialogId} = useChat()\n\n    const {recipients} = useRecipients()\n\n    const addUserToDialog = () => {\n        userService.userExists(username.replace(/\\s/g, ''))\n            .then(async response => {\n                if (connection.connectionStarted) {\n                    console.log('add user to dialog form: connection started')\n                    try {\n                        console.log('adding user to dialog: ')\n                        if (recipients.indexOf(username.replace(/\\s/g, '') != -1)) {\n                            await connection.invoke('AddUserToDialog', username, dialogId + 1)\n                            handleClose()\n                        } else {\n                            setError(\"Пользователя с таким именем нет в беседе\")\n                        }\n                    } catch (e) {\n                        console.log(e)\n                    }\n                } else {\n                    setError(\"Не удалось соединиться с сервером\")\n                }\n            })\n            .catch(() => {\n                setError(\"Пользователя с таким именем не найдено в диалоге\")\n            })\n    }\n\n    const removeUserFromDialog = () => {\n        userService.userExists(username.replace(/\\s/g, ''))\n            .then(async response => {\n                if (connection.connectionStarted) {\n                    console.log('remove user from dialog form: connection started')\n                    try {\n                        console.log('removing user from dialog')\n                        if (recipients.indexOf(username.replace(/\\s/g, '')) != -1) {\n                            await connection.invoke('RemoveUserFromDialog', username, dialogId + 1)\n                            handleClose()\n                        } else {\n                            setError('Пользователя с таким именем нет в беседе')\n                        }\n                    } catch (e) {\n                        console.log(e)\n                    }\n                }\n            })\n            .catch(() => {\n                setError(\"Пользователя с таким именем не найдено в диалоге\")\n            })\n    }\n\n    return (\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>{type == 'add' ? <div>Add user to dialogue</div> :\n                    <div>Remove user from dialogue</div>}\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <input type='text' onChange={handleUsernameUpdate} value={username}/>\n                {error.length > 0 ? <Error errorMessage={error}/> : <div></div>}\n            </Modal.Body>\n            <Modal.Footer>\n                {type === 'add' ? <Button variant=\"secondary\" onClick={addUserToDialog}>Add user to dialog</Button> :\n                    <Button variant=\"secondary\" onClick={removeUserFromDialog}>Remove user from dialog</Button>}\n            </Modal.Footer>\n        </Modal>\n    )\n\n}","import Dialog from \"./dialog\";\nexport default Dialog;","import React, {useState, useEffect} from \"react\";\nimport AddRemoveModalForm from \"../../../add-remove-modal-form\";\n\nexport default function Dialog({name, message, active, connection, userService}) {\n\n    const [classList, setClassList] = useState('chat_list')\n    const [type, setType] = useState('')\n    const [show, setShow] = useState(false)\n\n    const handleShow = () => {\n        setShow(true)\n    }\n\n    const handleClose = () => {\n        setShow(false)\n    }\n\n    return (\n        <div>\n\n\n            <AddRemoveModalForm connection={connection} type={type} handleShow={handleShow}\n                                handleClose={handleClose} show={show} userService={userService}/>\n\n\n            <div className={classList + ' dialogue-block'}>\n                <div className='button-add-remove-user-to-dialog'>\n                    <button className='btn btn-light' onClick={() => {handleShow(); setType('add')}}>+</button>\n                    <button className='btn btn-light' onClick={() => {handleShow(); setType('remove')}}>-</button>\n                </div>\n                <div className=\"chat_people\">\n                    <div className=\"chat_img\"><img\n                        src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\"/></div>\n                    <div className=\"chat_ib\">\n                        <h5 className={'message'}> {name} </h5>\n                        <p>{message}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n}","import Spinner from \"./spinner\";\nexport default Spinner;","import React from 'react';\nimport './spinner.css';\n\nconst Spinner = () => {\n    return (\n        <div className=\"loadingio-spinner-eclipse-3yvde555i2f\">\n            <div className=\"ldio-yjnnkvcikt\">\n                <div></div>\n            </div>\n        </div>\n    )\n}\n\nexport default Spinner;\n\n","import Dialogs from \"./dialogs\"\nexport default Dialogs","import React, {useEffect, useState, useCallback} from 'react'\nimport {HubConnectionBuilder} from \"@microsoft/signalr\";\nimport Dialog from \"./Dialog\";\nimport Spinner from \"../../spinner\";\nimport {useChat} from \"../../ChatProvider/ChatProvider\";\nimport {useRecipients} from \"../../ChatProvider/chatProviderRecipients\";\n\nexport default function Dialogs({data, showDialogue, connection, userService}) {\n\n    const [username, setUsername] = useState('')\n    const [dialogName, setDialogName] = useState('')\n    const [dialogueParticipantsUnique, setDialogueParticipantsUnique] = useState([])\n    const [dialogs, setDialogs] = useState([])\n\n    useEffect(() => {\n        console.log('dialogs render ')\n        const user = JSON.parse(localStorage.getItem('username'))\n        console.log('dialogs1: ', user)\n        setUsername(user.username)\n    }, [])\n\n    const selectDialogue = (id, recipients) => {\n        console.log('Select users ', recipients)\n        selectRecipients(recipients)\n        showDialogue(id)\n    }\n\n    const {selectRecipients} = useRecipients()\n\n    useEffect(() => {\n        setDialogs(data.map(item => {\n            return (\n                <div key={item.id} onClick={() => selectDialogue(item.id, item.name.split(', '))}>\n                    <Dialog\n                        name={item.name}\n                        message={item.messages[item.messages.length - 1].text}\n                        active={item.active}\n                        connection={connection}\n                        userService={userService}\n                    />\n                </div>\n            )\n        }))\n    }, [data])\n\n\n    return (\n        <div>\n            <div>\n                {data == undefined ? <Spinner/> : dialogs}\n            </div>\n        </div>\n    )\n\n}","import Message from \"./message\";\nexport default Message","import React from 'react'\n\nexport default function Message({userName, senderName, text}) {\n\n    if (senderName == userName) {\n        return (<div className=\"outgoing_msg\">\n            <div className=\"sent_msg\">\n                <p>{text}</p>\n                <span className=\"time_date\"> {senderName}</span></div>\n        </div>)\n    } else {\n        return (\n            <div className=\"incoming_msg\">\n                <div className=\"incoming_msg_img\"><img\n                    src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\"/></div>\n                <div className=\"received_msg\">\n                    <div className=\"received_withd_msg\">\n                        <p>{text}</p>\n                        <span className=\"time_date\"> {senderName}</span></div>\n                </div>\n            </div>\n        )\n    }\n}","import MessageHistory from \"./messageHistory\";\nexport default MessageHistory","import React, {useState, useEffect} from 'react'\nimport Message from \"./Message\";\nimport Spinner from \"../../spinner\";\nimport {useChat} from \"../../ChatProvider/ChatProvider\";\nimport {useRecipients} from \"../../ChatProvider/chatProviderRecipients\";\n\nexport default function MessageHistory({data, userService}) {\n\n    const [userName, setUserName] = useState('')\n    const [messages, setMessages] = useState(null)\n    const {dialogId} = useChat()\n    const {recipients} = useRecipients()\n\n    useEffect(() => {\n        const user = JSON.parse(localStorage.getItem('username'))\n        setUserName(user.username)\n    })\n\n    useEffect(() => {\n        console.log('message history render with data ', data, 'dialogId ', dialogId)\n        console.log('message history woll show data: ', data, ' dialogId: ', dialogId, ' ', data[2], ' ', data[2]?.messages)\n\n        if (data !== null && dialogId !== -1) {\n            data.forEach((item) => {\n                if (item.id === dialogId + 1) {\n                    const dialogMessages = item.messages.map(item => {\n                        return {\n                            senderName: item.senderUsername,\n                            text: item.text\n                        }\n                    })\n                    setMessages(dialogMessages)\n                }\n            })\n        }\n    }, [data, dialogId, recipients])\n\n    return (\n        <div className=\"msg_history\">\n            {messages == null ? <div>Select dialog</div> : messages.map((item, i) => {\n                return <Message key={i} senderName={item.senderName} userName={userName} text={item.text}/>\n            })}\n        </div>\n    )\n}","import InputMessage from \"./inputMessage\";\nexport default InputMessage","import React, {useState, useEffect} from \"react\";\nimport {useChat} from \"../../ChatProvider/ChatProvider\";\nimport {sendMessage} from \"@microsoft/signalr/dist/esm/Utils\";\nimport dialog from \"../Dialogs/Dialog/dialog\";\nimport {useRecipients} from \"../../ChatProvider/chatProviderRecipients\";\n\nexport default function InputMessage({connection}) {\n\n    const [text, setText] = useState('')\n    const [username, setUsername] = useState('')\n\n    const {dialogId} = useChat()\n\n    useEffect(() => {\n        console.log('input message render ')\n        const user = JSON.parse(localStorage.getItem('username'))\n        console.log('input message1: ', user)\n        setUsername(user.username)\n    }, [])\n\n    const changeText = (e) => {\n        setText(e.target.value)\n    }\n\n\n    const sendMessage = async () => {\n        if (connection.connectionStarted && dialogId != -1) {\n            console.log('input message: connection started')\n            try {\n                console.log('input message: sending message')\n                await connection.invoke('SendMessage', username, dialogId + 1, text, recipients)\n            } catch (e) {\n                console.log('input message ', e)\n            }\n        }\n        setText('')\n    }\n\n    const {recipients} = useRecipients()\n\n    console.log('RECIPIENTS ', recipients)\n\n    return (\n        <div className=\"type_msg\">\n            <div className=\"input_msg_write\">\n                <input type=\"text\" className=\"write_msg\" placeholder=\"Type a message\"\n                       onChange={changeText}\n                       value={text}\n                />\n                <button className=\"msg_send_btn\" type=\"button\" onClick={sendMessage}>\n                    <i className=\"fa fa-paper-plane-o\" aria-hidden=\"true\"/>\n                </button>\n            </div>\n        </div>\n    )\n}","import ModelWindow from \"./modalWindow\";\nexport default ModelWindow","import React, {useEffect, useState} from 'react'\nimport {Button, Modal} from \"react-bootstrap\";\nimport Error from \"../../error\";\n\nexport default function ModalWindow({show, handleClose, connection, userService}) {\n\n    const [error, setError] = useState('')\n    const [message, setMessage] = useState('')\n    const [recipient, setRecipient] = useState('')\n\n    useEffect(() => {\n        if (recipient) console.log(recipient.replace(/\\s/g, ''))\n    })\n\n\n    const handleRecipientUpdate = (e) => {\n        setRecipient(e.target.value)\n    }\n\n    const handleMessageUpdate = (e) => {\n        setMessage(e.target.value)\n    }\n\n    const sendMessage = () => {\n        userService.userExists(recipient.replace(/\\s/g, ''))\n            .then(async (response) => {\n                if (connection.connectionStarted) {\n                    console.log('modal window: connection started')\n                    try {\n                        console.log('modal window: sending message ')\n                        await connection.invoke(\"CreateDialogAndSendMessage\", recipient, message)\n                        handleClose()\n                    } catch (e) {\n                        console.log(e)\n                    }\n                } else {\n                    setError(\"Не удалось подключиться к серверу\")\n                }\n            })\n            .catch((e) => {\n                console.log(e)\n                if (e.message = \"Request failed with status code 404\"){\n                    setError(\"Пользовательи с таким никнеймом не найден\")\n                }\n            })\n    }\n\n    return (\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Отправить сообщение</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div className='form-group row'>\n                    <div className=\"col-md-11\">\n                        <input type=\"text\" className=\"form-control\"\n                               name=\"email-address\" required autoFocus\n                               placeholder='Кому...'\n                               value={recipient}\n                               onChange={handleRecipientUpdate}\n                        />\n                        <div className=\"form-group\">\n                            <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"\n                                      placeholder=\"Ваше сообщение\"\n                                      value={message}\n                                      onChange={handleMessageUpdate}\n                            ></textarea>\n                        </div>\n                        {error.length > 0 ? <Error errorMessage={error}/> : <div></div> }\n                    </div>\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={sendMessage}>\n                    Отправить\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}","import Chat from \"./chat\";\nexport default Chat;","import React, {useState, useEffect, useCallback} from 'react'\nimport {HubConnectionBuilder, HttpTransportType} from \"@microsoft/signalr\";\nimport './chat.css'\nimport Dialogs from \"./Dialogs\";\nimport MessageHistory from \"./MessageHistory\";\nimport InputMessage from \"./InputMessage\";\nimport {useChat} from \"../ChatProvider/ChatProvider\";\nimport {Modal, Button} from \"react-bootstrap\";\nimport ModalWindow from \"./ModalWindow\";\n\n\nexport default function Chat({userService}) {\n\n    const [connection, setConnection] = useState(null)\n    const [token, setToken] = useState(localStorage.getItem('jwtToken'))\n    const [data, setData] = useState([])\n    const [show, setShow] = useState(false)\n\n    useEffect(() => {\n\n    })\n\n    useEffect(() => {\n        console.log('chat render ')\n        const newConnection = new HubConnectionBuilder()\n            .withUrl('/dialogs', {\n                accessTokenFactory: () => token,\n            },).build()\n        setConnection(newConnection)\n    }, [])\n\n    useEffect(() => {\n        console.log('chat render with hub connection')\n        if (connection) {\n            connection.start()\n                .then(result => {\n                    console.log('chat: connected')\n                    connection.on('GetDialogs', response => {\n                        console.log('chat getting data ', response)\n                        response.forEach((item) => item.active = false)\n                        setData(response)\n                    })\n\n                })\n                .then(() => handleChecking())\n                .then(() => {\n\n                })\n                .catch(e => console.log('chat: Connection failed: ', e))\n        }\n        setToken(localStorage.getItem('jwtToken'))\n    }, [connection])\n\n    const handleChecking = async () => {\n        console.log('chat: ', token)\n        if (connection.connectionStarted) {\n            console.log('chat: connection started')\n            try {\n                await connection.send('SendDialogs', null)\n            } catch (e) {\n                console.log('chat ', e)\n            }\n        } else {\n            console.log('chat: No connection to server yet')\n            connection.start()\n        }\n    }\n\n\n    const {selectDialog, dialogId} = useChat()\n\n    const showDialogue2 = (id) => {\n        selectDialog(id)\n    }\n\n    const handleShow = () => {\n        setShow(true)\n    }\n\n    const handleClose = () => {\n        setShow(false)\n    }\n\n    const logOut = () => {\n        localStorage.removeItem('username')\n        window.location.reload()\n    }\n\n    return (\n        <div>\n\n            <ModalWindow handleShow={handleShow} handleClose={handleClose} show={show} connection={connection}\n                         userService={userService}/>\n\n            <div className=\"container\">\n                <h3 className=\"text-center test\">Messaging</h3>\n                <button className='btn btn-light logout-button' onClick={logOut}>Log out</button>\n                <div className=\"messaging\">\n                    <div className=\"inbox_msg\">\n                        <div className=\"inbox_people\">\n                            <div className=\"headind_srch\">\n                                <div className=\"recent_heading\">\n                                    <h4>Recent</h4>\n                                </div>\n                                <div className=\"srch_bar\">\n                                    <div className=\"stylish-input-group\">\n                                        <Button variant={'primary'} onClick={handleShow}>\n                                            Написать сообщение\n                                        </Button>\n                                        <span className=\"input-group-addon\">\n                                        <button type=\"button\">\n                                            <i className=\"fa fa-search\" aria-hidden=\"true\"/>\n                                        </button>\n                                    </span>\n                                    </div>\n                                </div>\n                            </div>\n\n\n                            <Dialogs data={data} showDialogue={showDialogue2} connection={connection} userService={userService}/>\n\n                        </div>\n                        <div className=\"mesgs\">\n\n                            <MessageHistory data={data} userService={userService}/>\n\n                            <InputMessage connection={connection}/>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import Registration from \"./registration\";\nexport default Registration","import React, {useState, useRef, useEffect} from 'react'\nimport {Link} from \"react-router-dom\";\nimport Error from \"../error\";\n\nexport default function Registration({userService}) {\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [copyPassword, setCopyPassword] = useState('')\n    const [error, setError] = useState('')\n\n    const onUsernameChanged = (event) => {\n        setUsername(event.target.value)\n    }\n\n    const onPasswordChanged = (event) => {\n        setPassword(event.target.value)\n    }\n\n    const onCopyPasswordChanged = event => {\n        setCopyPassword(event.target.value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        if (password === copyPassword) {\n            userService.registration(username.replace(/\\s/g, ''), password)\n                .then(() => {\n                    userService.authentication(username, password)\n                        .then(() => {\n                            window.location.reload()\n                        })\n                })\n                .catch(e => {\n                    console.log(JSON.parse(JSON.stringify(e)))\n                    if (e.message == \"Request failed with status code 404\") {\n                        setError(\"Пользователь с таким ником уже зарегестрирован. \")\n                    }\n                })\n        } else {\n            setError('Пароли должны совпадать.')\n        }\n    }\n\n    return (\n        <>\n            <main className=\"login-form\">\n                <div className=\"container\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-md-8\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">Registration</div>\n                                <div className=\"card-body\">\n                                    <form onSubmit={handleSubmit}>\n                                        <div className=\"form-group row\">\n                                            <label htmlFor=\"email_address\"\n                                                   className=\"col-md-4 col-form-label text-md-right\">Username</label>\n                                            <div className=\"col-md-6\">\n                                                <input type=\"text\" className=\"form-control\"\n                                                       name=\"email-address\" required autoFocus\n                                                       value={username}\n                                                       onChange={onUsernameChanged}\n                                                />\n                                            </div>\n                                        </div>\n                                        <div className=\"form-group row\">\n                                            <label htmlFor=\"password\"\n                                                   className=\"col-md-4 col-form-label text-md-right\">Password</label>\n                                            <div className=\"col-md-6\">\n                                                <input type=\"password\" id=\"password\" className=\"form-control\"\n                                                       name=\"password\" required\n                                                       value={password}\n                                                       onChange={onPasswordChanged}\n                                                />\n                                            </div>\n                                        </div>\n                                        <div className=\"form-group row\">\n                                            <label htmlFor=\"password\"\n                                                   className=\"col-md-4 col-form-label text-md-right\">Copy\n                                                password</label>\n                                            <div className=\"col-md-6\">\n                                                <input type=\"password\" id=\"copyPassword\" className=\"form-control\"\n                                                       name=\"copyPassword\" required\n                                                       value={copyPassword}\n                                                       onChange={onCopyPasswordChanged}\n                                                />\n                                            </div>\n                                        </div>\n                                        {error.length > 0 ? <Error errorMessage={error}/> : <div></div>}\n                                        <div className=\"col-md-6 offset-md-4\">\n                                            <button type=\"submit\" className=\"btn btn-primary\">\n                                                Sign in\n                                            </button>\n                                            <Link to={'/authorization'} className=\"btn btn-link\">\n                                                Authorization\n                                            </Link>\n\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </main>\n        </>\n    )\n}\n","import React from 'react'\nimport './App.css';\nimport Authorization from \"./components/Authorization\";\nimport UserService from \"./components/services/UserService\";\nimport {BrowserRouter as Router, Redirect, Route} from 'react-router-dom'\nimport Chat from \"./components/Chat\";\nimport ChatProvider, {useChat} from \"./components/ChatProvider/ChatProvider\";\nimport Registration from \"./components/RegistrationForm\";\n\nconst userService = new UserService()\n\n\nfunction App() {\n    return (\n        <ChatProvider>\n            <Router>\n                <div className=\"App\">\n                    <Route path={'/registration'}>\n                        {localStorage.getItem('username') === null ? <Registration userService={userService}/> :\n                            <Redirect to={'/chat'}/>}\n                    </Route>\n                    <Route exact strict path={'/'}>\n                        {localStorage.getItem('username') === null ? <Redirect to={'/authorization'}/> :\n                            <Redirect to={'/chat'}/>}\n                    </Route>\n                    <Route strict path='/authorization'>\n                        {localStorage.getItem('username') === null ? <Authorization userService={userService}/> :\n                            <Redirect to={'/chat'}/>}\n                    </Route>\n                    <Route strict path={'/chat'}>\n                        {localStorage.getItem('username') === null ? <Redirect to={'/authorization'}/> :\n                            <Chat userService={userService}/>}\n                    </Route>\n                </div>\n            </Router>\n        </ChatProvider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}